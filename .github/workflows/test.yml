name: test

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    strategy:
      matrix:
        go: ["1.13.5"]
        os: [ubuntu-latest, macOS-latest, windows-latest]
    name: Go ${{ matrix.go }} test in ${{ matrix.os }}
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1

      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}

      - name: Environment
        run: |
          go version
          go env

      - name: Test
        run: make test

      - name: Build
        run: |
          bash build-simple.sh

      # after success
      - name: Coverage
        if: job.status == 'success' && startsWith(matrix.os, 'ubuntu') && github.repository == 'axetroy/s4'
        run: |
          GO111MODULE=off go get github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -coverprofile=coverage.out -service=github-action -repotoken ${{ secrets.COVERALLS_TOKEN }}

      - uses: actions/upload-artifact@v1
        if: runner.os == 'linux'
        with:
          name: bin
          path: ./bin

  release:
    name: Release to Github
    if: startsWith(github.ref, 'refs/tags/') && github.repository == 'axetroy/s4'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bin

      - uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          files: |
            bin/s4_darwin_amd64.tar.gz
            bin/s4_linux_amd64.tar.gz
            bin/s4_linux_arm64.tar.gz
            bin/s4_freebsd_amd64.tar.gz
            bin/s4_openbsd_amd64.tar.gz
            bin/s4_openbsd_arm64.tar.gz
            bin/s4_windows_amd64.tar.gz
          draft: false
